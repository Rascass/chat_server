<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sessions_mapper">
    <select id="getById" resultMap="sessions_map">
        SELECT Sessions.id as s_id, Clients.id as c_id, start, port, isActive, ip, host,
        sessionToken, clientToken, login, passwordHash
        FROM Sessions
        LEFT JOIN SessionClients
        ON SessionClients.sessionId = Sessions.id
        LEFT JOIN Clients
        ON SessionClients.clientId = Clients.id
        WHERE Sessions.id=#{id}
    </select>
    <select id="get" resultMap="sessions_map">
        SELECT Sessions.id as s_id, Clients.id as c_id, start, port, isActive, ip, host,
        sessionToken, clientToken, login, passwordHash
        FROM Sessions
        LEFT JOIN SessionClients
        ON SessionClients.sessionId = Sessions.id
        LEFT JOIN Clients
        ON SessionClients.clientId = Clients.id
    </select>
    <delete id="deleteById">
        DELETE FROM Sessions WHERE id=#{id}
    </delete>
    <delete id="deleteFromJunctionById">
        DELETE FROM SessionClients WHERE sessionId=#{id}
    </delete>
    <insert id="create">
        INSERT INTO Sessions(id, start, port, isActive, ip, host, sessionToken)
        VALUES(#{id}, #{start}, #{port}, #{isActive}, #{ip}, #{host}, #{sessionToken})
    </insert>
    <insert id="bind">
            INSERT INTO SessionClients(clientId, sessionId) VALUES
            <foreach collection="clients" item="item" open="(" separator="," close=")">
                #{item.id},
                #{id}
            </foreach>
    </insert>
    <update id="update">
        UPDATE Clients SET
        start=#{start}
        port=#{port}
        isActive=#{isActive}
        ip=#{ip}
        host=#{host}
        sessionToken=#{sessionToken}
        WHERE id=#{id}
    </update>

    <resultMap id="sessions_map" type="model.Session" autoMapping="false">
        <id property="id" column="s_id"/>
        <result property="start" column="start"/>
        <result property="port" column="port"/>
        <result property="isActive" column="isActive"/>
        <result property="ip" column="ip"/>
        <result property="host" column="host"/>
        <result property="sessionToken" column="sessionToken"/>
        <collection property="clients" ofType="model.Client"/>
    </resultMap>
</mapper>